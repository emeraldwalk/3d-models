{"version":3,"sources":["components/App.tsx","components/Scene.tsx","reportWebVitals.ts","index.tsx"],"names":["App","className","position","intensity","OrbitControls","Suspense","fallback","modelPath","Scene","fbx","useLoader","FBXLoader","camera","useThree","lookAt","set","object","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAqBeA,EAhBO,WACpB,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,kCAAkBC,SAAU,CAAC,GAAI,GAAI,GAAIC,UAAW,IACpD,kCAAkBD,SAAU,EAAE,IAAK,IAAK,GAAIC,UAAW,IACvD,cAACC,EAAA,EAAD,IACA,cAAC,IAAMC,SAAP,CAAgBC,SAAU,KAA1B,SACE,cAAC,EAAD,CAAOC,UAAU,qC,QCIZC,EATqB,SAAC,GAAmB,IAAjBD,EAAgB,EAAhBA,UAC/BE,EAAMC,YAAUC,IAAWJ,GACzBK,EAAWC,cAAXD,OAIR,OAFAA,EAAOE,OAAO,EAAG,EAAG,IACpBF,EAAOV,SAASa,IAAI,EAAG,IAAK,IACrB,2BAAWC,OAAQP,KCAbQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8a7c9c09.chunk.js","sourcesContent":["import React from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport { OrbitControls } from '@react-three/drei'\nimport { Scene } from '.'\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Canvas>\n        <directionalLight position={[10, 10, 5]} intensity={2} />\n        <directionalLight position={[-10, -10, -5]} intensity={1} />\n        <OrbitControls />\n        <React.Suspense fallback={null}>\n          <Scene modelPath=\"assets/cup-nocollide.fbx\" />\n          {/* <Environment preset=\"sunset\" background /> */}\n        </React.Suspense>\n      </Canvas>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport { useLoader, useThree } from '@react-three/fiber'\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader'\n\nexport interface SceneProps {\n  modelPath: string\n}\n\nconst Scene: React.FC<SceneProps> = ({ modelPath }) => {\n  const fbx = useLoader(FBXLoader, modelPath)\n  const { camera } = useThree()\n\n  camera.lookAt(0, 0, 10)\n  camera.position.set(0, 20, -20)\n  return <primitive object={fbx} />\n}\n\nexport default Scene\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './components'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}